# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches:
      - master
      - '**'

  pull_request:
    branches:
      - master
    
    paths-ignore:
      - 'lib/**'
    
    types: [ opened, edited, review_requested , ready_for_review, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
    - name: Install OS dependencies
      run: |
        sudo yes | sudo apt-get install libpcap-dev libnet-dev tshark
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude="lib/*"
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics --exclude="lib/*"
    - name: wait for mongodb
      run: |
        sleep 15
    - name: Run modules test
      run: |
        python3 ohp.py -m all --test
    - name: Run API server
      run: |
        nohup python3 ohp.py --start-api-server & >/tmp/ohp
    - name: Wait for API server
      run: |
        sleep 5
    - name: Test with pytest
      run: |
        python3 -m pytest -rpP
    - name: Kill API Server
      run: |
        killall python3
